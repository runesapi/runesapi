name: build

on:
  push:
    branches:
      - master
      - develop
      - feature/*
      - hotfix/*
      - bugfix/*
  pull_request:
    branches:
      - master
      - develop

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12.16'

      - name: npm cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Setup variables
        run: |
          export VERSION=$(jq -r .version package.json)
          export VERSION_MAJOR=$(jq -r '.version | split(".")[0]' package.json)
          export VERSION_MINOR=$(jq -r '.version | split(".")[1]' package.json)
          export VERSION_PATCH=$(jq -r '.version | split(".")[2]' package.json)
          echo "::set-env name=VERSION::$VERSION"
          echo "::set-env name=VERSION_MAJOR::$VERSION_MAJOR"
          echo "::set-env name=VERSION_MAJOR_MINOR::$VERSION_MAJOR.$VERSION_MINOR"
          echo "::set-env name=VERSION_MAJOR_MINOR_PATCH::$VERSION_MAJOR.$VERSION_MINOR.$VERSION_PATCH"

      - name: Docker login
        run: docker login --username $DOCKER_USER --password $DOCKER_PASSWORD
        env:
          DOCKER_USER: ${{ secrets.DOCKERHUB_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_API_KEY }}

      - name: Install Node Modules
        run: npm ci

      - name: Unit Tests
        run: npm test

      - name: Get docker image tags
        id: get_tags
        if: github.event_name == 'push'
        run: |
          if [ $BRANCH_NAME = "master" ]; then
            echo "::set-output name=tags::$VERSION_TAG, $VERSION, $VERSION_MAJOR, $VERSION_MAJOR_MINOR, $VERSION_MAJOR_MINOR_PATCH, latest"
          fi

      - name: Docker build
        if: github.event_name == 'push'
        uses: docker/build-push-action@v1
        env:
          DOCKER_BUILDKIT: 1
          BUILDKIT_PROGRESS: plain
        with:
          repository: runesapi/runesapi
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_API_KEY }}
          tags: ${{ steps.get_tags.outputs.tags }}
          add_git_labels: true
